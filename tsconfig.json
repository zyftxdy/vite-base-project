{
  "compilerOptions": {
    // 目标代码(ts -> js(es5/6/7))
    "target": "esnext",
    // 目标代码需要使用的模块化方案
    "module": "esnext",
    // 打开严格检查
    "strict": true,
    // 对jsx进行怎样的处理
    "jsx": "preserve",
    // 辅助的导入功能
    "importHelpers": true,
    // 按照node的方式去解析模块
    "moduleResolution": "node",
    // 跳过对一些库的类型检测
    "skipLibCheck": true,
    // 不生成编译文件
    "noEmit": true,
    // es module 和 commonjs混合使用
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "useDefineForClassFields": true,
    // 生成映射文件（ts -> js）
    "sourceMap": true,
    // 文件路径解析时的基本url
    "baseUrl": ".",
    // 指定具体要解析使用的类型
    "types": [
      "vite/client",
      "element-plus/global"
    ],
    // 路径解析
    "paths": {
      "@/*": [
        "src/*"
      ],
      "#/*": [
        "types/*"
      ]
    },
    // 指定在项目中可以使用哪些库的类型
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ]
  },
  // 哪些代码要进行ts解析
  "include": [
    "src/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "types/**/*.d.ts",
    "types/**/*.ts",
    "./auto-imports.d.ts",
    "./components.d.ts",
    "vite.config.ts"
  ],
  // 排除ts解析
  "exclude": [
    "node_modules"
  ]
}
